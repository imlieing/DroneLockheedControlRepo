<launch>
  <arg name="use_external_renderer" default="0" />
  <arg name="ignore_collisions" default="false" />
  <arg name="render_stereo" default="0" />
  <arg name="level"/>
  <arg name="gate_locations" default="0"/>
  <env name="CWD" value="$(env PWD)" />

<!-- OUR CODE BEGIN HERE -->

    <group ns="/image_processing_nodes">
        <!-- Start image processing nodes-->
      <node name="pathplanning" pkg="pathplanning" type="imageProcessing.py" output="screen">
      <remap from="processing/rateThrust" to="/pathplanning/input/rateThrust"/>

      </node>
    </group>

      <node name="controller" pkg="pid" type="controller" ns="rateThrustZ" output="screen" >
        <param name="Kp" value="1.0" />
        <param name="Ki" value="0.0" />
        <param name="Kd" value="0.0" />
        <param name="upper_limit" value="10" />
        <param name="lower_limit" value="-10" />
        <param name="windup_limit" value="10" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
        <remap from="setpoint" to="/output/pathRateThrustZ" />
        <remap from="state" to="/output/imuRateThrustZ" />
       </node>

       <node name="controller" pkg="pid" type="controller" ns="rateThrustRoll" output="screen" >
         <param name="Kp" value="1.0" />
         <param name="Ki" value="0.0" />
         <param name="Kd" value="0.0" />
         <param name="upper_limit" value="10" />
         <param name="lower_limit" value="-10" />
         <param name="windup_limit" value="10" />
         <param name="max_loop_frequency" value="100.0" />
         <param name="min_loop_frequency" value="100.0" />
         <remap from="setpoint" to="/output/pathRateThrustRoll" />
         <remap from="state" to="/output/imuRateThrustRoll" />
        </node>

        <node name="controller" pkg="pid" type="controller" ns="rateThrustPitch" output="screen" >
          <param name="Kp" value="1.0" />
          <param name="Ki" value="0.0" />
          <param name="Kd" value="0.0" />
          <param name="upper_limit" value="10" />
          <param name="lower_limit" value="-10" />
          <param name="windup_limit" value="10" />
          <param name="max_loop_frequency" value="100.0" />
          <param name="min_loop_frequency" value="100.0" />
          <remap from="setpoint" to="/output/pathRateThrustPitch" />
          <remap from="state" to="/output/imuRateThrustPitch" />
         </node>

         <node name="controller" pkg="pid" type="controller" ns="rateThrustYaw" output="screen" >
           <param name="Kp" value="1.0" />
           <param name="Ki" value="0.0" />
           <param name="Kd" value="0.0" />
           <param name="upper_limit" value="10" />
           <param name="lower_limit" value="-10" />
           <param name="windup_limit" value="10" />
           <param name="max_loop_frequency" value="100.0" />
           <param name="min_loop_frequency" value="100.0" />
           <remap from="setpoint" to="/output/pathRateThrustYaw" />
           <remap from="state" to="/output/imuRateThrustYaw" />
          </node>

            <node name="imu_and_pathplanning_separator" pkg="autonomous_control" type="pid.py" output="screen">
          </node>


    <group ns="/control_nodes">
      <!-- Start autonomous nodes -->
      <node name="autonomous_control" pkg="autonomous_control" type="autonomous.py" output="screen">
        <remap from="output/rateThrust" to="/uav/input/rateThrust"/>
      </node>
    </group>
<!-- OUR CODE ENDS HERE -->
  <!--include core flightgoggles launch file-->
  <include file="$(find flightgoggles)/launch/core.launch">
    <arg name="use_external_renderer" value="$(arg use_external_renderer)"/>
    <arg name="render_stereo" value="$(arg render_stereo)"/>
    <arg name="ignore_collisions" value="$(arg ignore_collisions)"/>
    <arg name="gate_locations" value="$(arg gate_locations)"/>
  </include>

  <node name="reporter" pkg="flightgoggles_reporter" type="reporter.py" output="screen" cwd='node' required="true"/>
  <!-- Launch override settings. Must be placed at end of file to override params set in core launchfile. -->

  <!--For teleoperation, run dynamics in real time-->
  <param name="/use_sim_time" value="false" />

  <group ns="/uav">
  <rosparam command="load" file="$(find flightgoggles)/config/challenges/gate_locations_$(arg gate_locations).yaml"/>
  <rosparam command="load" file="$(find flightgoggles)/config/challenges/challenge_final.yaml"/>
  </group>

</launch>
